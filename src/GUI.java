import java.awt.event.ActionEvent;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;

public class GUI extends javax.swing.JFrame {

    ArrayList<Task> tasks = new ArrayList<Task>();
    String task_to_update;
    String Projname_to_update;
    private String ProjectManagerName;
    private String ID;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        Image icon = new ImageIcon(this.getClass().getResource("/img/w.png")).getImage();
        this.setIconImage(icon);
    }
    public GUI(ArrayList<Task> taskArrayList) {
        initComponents();
        Image icon = new ImageIcon(this.getClass().getResource("/img/w.png")).getImage();
        this.setIconImage(icon);
        this.tasks = taskArrayList;
        displaytasks(tasks);
        
        // for saving when close button press
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                
                int response = JOptionPane.showConfirmDialog(null, "Do you want to SAVE before quitting?", "Close", JOptionPane.YES_NO_OPTION);
                
                if (response == JOptionPane.YES_OPTION) {
                    JOptionPane.showMessageDialog(null, "Data Saved Successfully!");
                    
                    DataBase.saveTasksforaProjectMgr(tasks, ProjectManagerName);
                    
                } else if (response == JOptionPane.NO_OPTION) {
                    
                }
                
                dispose();
            }
        });
        
    }
    public GUI(ArrayList<Task> taskArrayList, String PMName, String PMID) {
        initComponents();
        Image icon = new ImageIcon(this.getClass().getResource("/img/w.png")).getImage();
        this.setIconImage(icon);
        this.tasks = taskArrayList;
        displaytasks(tasks);
        this.ProjectManagerName = PMName;
        this.ID = PMID;
        btn_confirmUpdate.setVisible(false);
        
        // for saving when close button press
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                
                int response = JOptionPane.showConfirmDialog(null, "Do you want to SAVE before quitting?", "Close", JOptionPane.YES_NO_OPTION);
                
                if (response == JOptionPane.YES_OPTION) {
                    JOptionPane.showMessageDialog(null, "Data Saved Successfully!");
                    
                    DataBase.saveTasksforaProjectMgr(tasks, ProjectManagerName);
                    
                } else if (response == JOptionPane.NO_OPTION) {
                    
                }
                
                dispose();
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        field_ProjName = new javax.swing.JTextField();
        field_devName = new javax.swing.JTextField();
        field_devID = new javax.swing.JTextField();
        field_taskName = new javax.swing.JTextField();
        field_taskDesc = new javax.swing.JTextField();
        field_Year = new javax.swing.JTextField();
        field_Month = new javax.swing.JTextField();
        field_Day = new javax.swing.JTextField();
        btn_AddTask = new javax.swing.JButton();
        btn_OpenMainTable = new javax.swing.JButton();
        btn_updateTask = new javax.swing.JButton();
        btn_confirmUpdate = new javax.swing.JButton();
        btn_RemoveTask = new javax.swing.JButton();
        btn_removeProject = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        btn_gotoMainMenu = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kanban driven(WPMS)");
        setBounds(new java.awt.Rectangle(0, 0, 1020, 550));
        setMaximumSize(new java.awt.Dimension(1020, 550));
        setMinimumSize(new java.awt.Dimension(1020, 550));
        setPreferredSize(new java.awt.Dimension(1020, 550));
        setSize(new java.awt.Dimension(1020, 550));
        getContentPane().setLayout(null);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(255, 255, 255));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setBorder(null);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(90, 210, 200, 292);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextArea2.setEditable(false);
        jTextArea2.setBackground(new java.awt.Color(255, 0, 51));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea2.setRows(5);
        jTextArea2.setBorder(null);
        jScrollPane2.setViewportView(jTextArea2);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(510, 210, 200, 292);

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextArea3.setEditable(false);
        jTextArea3.setBackground(new java.awt.Color(255, 153, 0));
        jTextArea3.setColumns(20);
        jTextArea3.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jTextArea3.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea3.setRows(5);
        jTextArea3.setBorder(null);
        jScrollPane3.setViewportView(jTextArea3);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(300, 210, 201, 292);

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextArea4.setEditable(false);
        jTextArea4.setBackground(new java.awt.Color(0, 204, 102));
        jTextArea4.setColumns(20);
        jTextArea4.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jTextArea4.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea4.setRows(5);
        jTextArea4.setBorder(null);
        jScrollPane4.setViewportView(jTextArea4);

        getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(720, 210, 200, 292);

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Todo");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(170, 180, 40, 20);

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 153, 0));
        jLabel2.setText("In Progress");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(360, 180, 80, 20);

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setText("Stuck");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(590, 180, 35, 20);

        jLabel15.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 204, 102));
        jLabel15.setText("Done");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(800, 180, 40, 20);

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Project Name");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(40, 30, 82, 18);

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Column Name");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(670, 30, 87, 18);

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Developer Name");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(431, 30, 110, 18);

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Developer Id");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(440, 50, 90, 18);

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Task Name");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(40, 50, 67, 18);

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Priority");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(710, 50, 43, 18);

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Task Description");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(40, 70, 100, 18);

        jLabel12.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Year");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(270, 30, 27, 18);

        jLabel13.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Day");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(270, 70, 23, 18);

        jLabel14.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Month");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(270, 50, 41, 18);

        field_ProjName.setBackground(new java.awt.Color(0, 0, 0));
        field_ProjName.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        field_ProjName.setForeground(new java.awt.Color(255, 255, 255));
        field_ProjName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        field_ProjName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_ProjNameActionPerformed(evt);
            }
        });
        getContentPane().add(field_ProjName);
        field_ProjName.setBounds(150, 30, 100, 20);

        field_devName.setBackground(new java.awt.Color(0, 0, 0));
        field_devName.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        field_devName.setForeground(new java.awt.Color(255, 255, 255));
        field_devName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        getContentPane().add(field_devName);
        field_devName.setBounds(550, 30, 100, 20);

        field_devID.setBackground(new java.awt.Color(0, 0, 0));
        field_devID.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        field_devID.setForeground(new java.awt.Color(255, 255, 255));
        field_devID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        getContentPane().add(field_devID);
        field_devID.setBounds(550, 50, 100, 20);

        field_taskName.setBackground(new java.awt.Color(0, 0, 0));
        field_taskName.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        field_taskName.setForeground(new java.awt.Color(255, 255, 255));
        field_taskName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        getContentPane().add(field_taskName);
        field_taskName.setBounds(150, 50, 100, 20);

        field_taskDesc.setBackground(new java.awt.Color(0, 0, 0));
        field_taskDesc.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        field_taskDesc.setForeground(new java.awt.Color(255, 255, 255));
        field_taskDesc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        getContentPane().add(field_taskDesc);
        field_taskDesc.setBounds(150, 70, 100, 20);

        field_Year.setBackground(new java.awt.Color(0, 0, 0));
        field_Year.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        field_Year.setForeground(new java.awt.Color(255, 255, 255));
        field_Year.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        getContentPane().add(field_Year);
        field_Year.setBounds(320, 30, 100, 20);

        field_Month.setBackground(new java.awt.Color(0, 0, 0));
        field_Month.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        field_Month.setForeground(new java.awt.Color(255, 255, 255));
        field_Month.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        getContentPane().add(field_Month);
        field_Month.setBounds(320, 50, 100, 20);

        field_Day.setBackground(new java.awt.Color(0, 0, 0));
        field_Day.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        field_Day.setForeground(new java.awt.Color(255, 255, 255));
        field_Day.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        getContentPane().add(field_Day);
        field_Day.setBounds(320, 70, 100, 20);

        btn_AddTask.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        btn_AddTask.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Frame 20_1.png"))); // NOI18N
        btn_AddTask.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        btn_AddTask.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_AddTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddTaskActionPerformed(evt);
            }
        });
        getContentPane().add(btn_AddTask);
        btn_AddTask.setBounds(160, 130, 130, 30);

        btn_OpenMainTable.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        btn_OpenMainTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Frame 19_1.png"))); // NOI18N
        btn_OpenMainTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        btn_OpenMainTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_OpenMainTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_OpenMainTableActionPerformed(evt);
            }
        });
        getContentPane().add(btn_OpenMainTable);
        btn_OpenMainTable.setBounds(580, 130, 130, 30);

        btn_updateTask.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        btn_updateTask.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Frame 17_2.png"))); // NOI18N
        btn_updateTask.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        btn_updateTask.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_updateTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateTaskActionPerformed(evt);
            }
        });
        getContentPane().add(btn_updateTask);
        btn_updateTask.setBounds(720, 130, 130, 30);

        btn_confirmUpdate.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        btn_confirmUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/CONFIRMUPDATE.png"))); // NOI18N
        btn_confirmUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 51)));
        btn_confirmUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_confirmUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_confirmUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btn_confirmUpdate);
        btn_confirmUpdate.setBounds(720, 130, 130, 30);

        btn_RemoveTask.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        btn_RemoveTask.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Frame 16_1.png"))); // NOI18N
        btn_RemoveTask.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        btn_RemoveTask.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_RemoveTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RemoveTaskActionPerformed(evt);
            }
        });
        getContentPane().add(btn_RemoveTask);
        btn_RemoveTask.setBounds(440, 130, 130, 30);

        btn_removeProject.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        btn_removeProject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Frame 18_1.png"))); // NOI18N
        btn_removeProject.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        btn_removeProject.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_removeProject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_removeProjectActionPerformed(evt);
            }
        });
        getContentPane().add(btn_removeProject);
        btn_removeProject.setBounds(300, 130, 130, 30);

        jComboBox1.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todo", "In Progress", "Done" }));
        jComboBox1.setBorder(null);
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(770, 30, 110, 22);

        jComboBox2.setFont(new java.awt.Font("Yu Gothic UI", 1, 13)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Low ", "Medium", "High" }));
        jComboBox2.setSelectedIndex(1);
        jComboBox2.setToolTipText("");
        jComboBox2.setBorder(null);
        getContentPane().add(jComboBox2);
        jComboBox2.setBounds(770, 50, 110, 22);

        btn_gotoMainMenu.setFont(new java.awt.Font("Yu Gothic UI", 1, 12)); // NOI18N
        btn_gotoMainMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Frame 34 (3).png"))); // NOI18N
        btn_gotoMainMenu.setBorder(null);
        btn_gotoMainMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_gotoMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gotoMainMenuActionPerformed(evt);
            }
        });
        getContentPane().add(btn_gotoMainMenu);
        btn_gotoMainMenu.setBounds(950, 20, 40, 40);

        jLabel4.setBackground(new java.awt.Color(0, 102, 102));
        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 204, 0));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Frame 33.png"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 0, 1020, 550);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void field_ProjNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_ProjNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_field_ProjNameActionPerformed

    private void btn_AddTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddTaskActionPerformed
        // TODO add your handling code here:
        String projectName=field_ProjName.getText();

        String column_name = (String) jComboBox1.getSelectedItem();

        String dev_name = field_devName.getText();

        String dev_id = field_devID.getText();

        String task_name = field_taskName.getText();

        String priority =(String) jComboBox2.getSelectedItem();

        String task_description = field_taskDesc.getText();

        int year =  Integer.parseInt(field_Year.getText());

        int month = Integer.parseInt(field_Month.getText());

        int day = Integer.parseInt(field_Day.getText());

        boolean alreadyExists = false;


        for (Task task: tasks){


            if(task.getDev_name().equalsIgnoreCase(dev_name) && task.getDevID().equals(dev_id)){

                alreadyExists=true;
                JOptionPane.showMessageDialog(null,"Plz change the developer name");

            }
            if(task.getTask_name().equalsIgnoreCase(task_name) && task.getProjectName().equalsIgnoreCase(projectName)){
                alreadyExists=true;
                JOptionPane.showMessageDialog(null,"Plz change the Task or project name");

            }
        }

        if(!alreadyExists){
            //adding task
            ProjectManager.ProjectManagerFunctionality05(projectName,column_name,dev_name,dev_id,task_name,priority,task_description,year,month,day,tasks,ProjectManagerName,ID);
            //save to database
//            DataBase.saveTasksforaProjectMgr(tasks, ProjectManagerName);
        }


        //display updated task list
        displaytasks(tasks);



    }//GEN-LAST:event_btn_AddTaskActionPerformed

    private void btn_OpenMainTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_OpenMainTableActionPerformed
        // TODO add your handling code here:
        MainTable mainTable = new MainTable(tasks);
//        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        this.dispose();
        mainTable.setVisible(true);

    }//GEN-LAST:event_btn_OpenMainTableActionPerformed

    private void btn_RemoveTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RemoveTaskActionPerformed
        // TODO add your handling code here:
        String TaskName = JOptionPane.showInputDialog("Enter Task Name to delete: ");
        String ProjectName = JOptionPane.showInputDialog("Enter Project in which this task exist: ");


        if( !(TaskName == null || TaskName.isEmpty()) ){
            if (ProjectManager.ProjectManagerFunctionality03(tasks, TaskName, ProjectName)) {
                JOptionPane.showMessageDialog(null, "Success! Task named \"" + TaskName + "\" Deleted Successfully");
                displaytasks(tasks);
            } else {
                JOptionPane.showMessageDialog(null, "Error! Task named \"" + TaskName + "\" does not exist");

            }
        }

        //update database
//        DataBase.saveTasksforaProjectMgr(tasks, ProjectManagerName);

    }//GEN-LAST:event_btn_RemoveTaskActionPerformed

    private void btn_removeProjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_removeProjectActionPerformed
        // TODO add your handling code here:
        String proj_to_delete = JOptionPane.showInputDialog("Enter Project Name to Delete ?");

        if(ProjectManager.ProjectManagerFunctionality06(tasks, proj_to_delete)){
            JOptionPane.showMessageDialog(null, "Success! Project named \"" + proj_to_delete + "\" Deleted Successfully");
            displaytasks(tasks);
        } else {
            JOptionPane.showMessageDialog(null, "Error! Project named \"" + proj_to_delete + "\" does not exist");
        }

        //update database
//        DataBase.saveTasksforaProjectMgr(tasks, ProjectManagerName);

    }//GEN-LAST:event_btn_removeProjectActionPerformed

    private void btn_updateTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateTaskActionPerformed
        // TODO add your handling code here:

        task_to_update = JOptionPane.showInputDialog("Enter the task name to Update: ");
        Projname_to_update= JOptionPane.showInputDialog("Enter the Project name of the Task: ");

        if (!tasks.isEmpty()) {
            boolean taskExists=false;
            for(Task task:tasks){

                if(task.getTask_name().equalsIgnoreCase(task_to_update) && task.getProjectName().equalsIgnoreCase(Projname_to_update)){
                    taskExists=true;
                    assignvalues(task);
//                    btn_confirmUpdate.setEnabled(true);
                    btn_updateTask.setVisible(false);
                    btn_confirmUpdate.setVisible(true);

                    btn_AddTask.setEnabled(false);
                    btn_RemoveTask.setEnabled(false);
                    btn_removeProject.setEnabled(false);
                    btn_gotoMainMenu.setEnabled(false);
                    btn_OpenMainTable.setEnabled(false);

                    break;
                }
            }
            if (!taskExists){
                JOptionPane.showMessageDialog(null,"Error! No task named '"+task_to_update+"' exists");
            }
        }

    }//GEN-LAST:event_btn_updateTaskActionPerformed



    private void btn_confirmUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_confirmUpdateActionPerformed
        // TODO add your handling code here:

        for(Task task:tasks) {

            if (task.getTask_name().equalsIgnoreCase(task_to_update)) {
                updateTask(task);
                JOptionPane.showMessageDialog(null,"Update Successfull!");
            }
        }
//        btn_confirmUpdate.setEnabled(false);
        btn_confirmUpdate.setVisible(false);
        btn_updateTask.setVisible(true);

        btn_AddTask.setEnabled(true);
        btn_RemoveTask.setEnabled(true);
        btn_removeProject.setEnabled(true);
        btn_gotoMainMenu.setEnabled(true);
        btn_OpenMainTable.setEnabled(true);

        resetTextFields();

    }//GEN-LAST:event_btn_confirmUpdateActionPerformed

    private void btn_gotoMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gotoMainMenuActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new MainScreen().setVisible(true);
        DataBase.saveTasksforaProjectMgr(tasks, ProjectManagerName);

    }//GEN-LAST:event_btn_gotoMainMenuActionPerformed

    void displaytasks(ArrayList<Task> tasks){

        //clearing previous result before displaying
        jTextArea1.setText("");
        jTextArea2.setText("");
        jTextArea3.setText("");
        jTextArea4.setText("");

        for (Task task : tasks) {

            if ("Todo".equalsIgnoreCase(task.getColumn_name())) {
                jTextArea1.append("------------------------------------------\n");
                jTextArea1.append(" Project Name     : " + task.getProjectName() + "\n");
                jTextArea1.append(" Task Name        : " +task.getTask_name() + "\n");
                jTextArea1.append(" Task Description : " + task.getTask_description() + "\n");
                jTextArea1.append(" Priority         : " + task.getPriority() + "\n");
            } else if ( "In Progress".equalsIgnoreCase(task.getColumn_name()) || "InProgress".equalsIgnoreCase(task.getColumn_name()) ) {
                jTextArea3.append("------------------------------------------\n");
                jTextArea3.append(" Project Name     : " + task.getProjectName() + "\n");
                jTextArea3.append(" Task Name        : " +task.getTask_name() + "\n");
                jTextArea3.append(" Task Description : " + task.getTask_description() + "\n");
                jTextArea3.append(" Priority         : " + task.getPriority() + "\n");
            } else if (Date.hasDatePassed(task.getDate())) {
                jTextArea2.append("------------------------------------------\n");
                jTextArea2.append(" Project Name     : " + task.getProjectName() + "\n");
                jTextArea2.append(" Task Name        : " +task.getTask_name() + "\n");
                jTextArea2.append(" Task Description : " + task.getTask_description() + "\n");
                jTextArea2.append(" Priority         : " + task.getPriority() + "\n");
            } else if ("Done".equalsIgnoreCase(task.getColumn_name())) {
                jTextArea4.append("------------------------------------------\n");
                jTextArea4.append(" Project Name     : " + task.getProjectName() + "\n");
                jTextArea4.append(" Task Name        : " +task.getTask_name() + "\n");
                jTextArea4.append(" Task Description : " + task.getTask_description() + "\n");
                jTextArea4.append(" Priority         : " + task.getPriority() + "\n");
            }}



    }
    void assignvalues(Task task){

        field_ProjName.setText(task.getProjectName());
        field_taskName.setText(task.getTask_name());
        field_devName.setText(task.getDev_name());
        field_devID.setText(task.getDevID());
        field_taskDesc.setText(task.getTask_description());
        field_Year.setText(String.valueOf(task.getyears()));
        field_Month.setText(String.valueOf(task.getmonths()));
        field_Day.setText(String.valueOf(task.getday()));

        jComboBox1.setSelectedItem(task.getColumn_name());
        jComboBox2.setSelectedItem(task.getPriority());

    }
    private void updateTask(Task task) {
        task.update_task_name(field_taskName.getText());
        task.updateProjectName(field_ProjName.getText());
        task.update_dev_name(field_devName.getText());
        task.updateDevID(field_devID.getText());
        task.update_task_description(field_taskDesc.getText());

        task.update_priority((String) jComboBox2.getSelectedItem());

//        task.setColumn_e((String) jComboBox1.getSelectedItem());

        int Year = Integer.parseInt(field_Year.getText());
        int Month = Integer.parseInt(field_Month.getText());
        int Day = Integer.parseInt(field_Day.getText());

        Date d = new Date(Year, Month, Day);

        if (Date.hasDatePassed(d)){
            task.setColumn_e("Stuck");
        }
        else{
            task.setColumn_e((String) jComboBox1.getSelectedItem());
        }

        task.update_date(d);

        displaytasks(tasks);

        //save to database
//        DataBase.saveTasksforaProjectMgr(tasks, ProjectManagerName);

    }
    void resetTextFields(){
        field_ProjName.setText("");
        field_taskName.setText("");
        field_devName.setText("");
        field_devID.setText("");
        field_taskDesc.setText("");
        field_Year.setText("");
        field_Month.setText("");
        field_Day.setText("");

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_AddTask;
    private javax.swing.JButton btn_OpenMainTable;
    private javax.swing.JButton btn_RemoveTask;
    private javax.swing.JButton btn_confirmUpdate;
    private javax.swing.JButton btn_gotoMainMenu;
    private javax.swing.JButton btn_removeProject;
    private javax.swing.JButton btn_updateTask;
    private javax.swing.JTextField field_Day;
    private javax.swing.JTextField field_Month;
    private javax.swing.JTextField field_ProjName;
    private javax.swing.JTextField field_Year;
    private javax.swing.JTextField field_devID;
    private javax.swing.JTextField field_devName;
    private javax.swing.JTextField field_taskDesc;
    private javax.swing.JTextField field_taskName;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    // End of variables declaration//GEN-END:variables
}
